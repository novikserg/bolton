exit
Wrapper.new(@url, method, *args)
*args
args
method
@url
url
Wrapper.new(url, method, *args)
@url = uri.to_s
self.base_host
self
base_host
Wrapper.new(1,2)
(1,2,3)
(1,2)
Wrapper.new
Wrapper
Wrapper.new(base_host, method, *args)
self
method
c
endpoint
exit
c
args
method_name
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
c
args
method_name
args
c
JSON.parse(response, object_class: OpenStruct).value.categories
JSON.parse(response, object_class: OpenStruct).value.joke
JSON.parse(response, object_class: OpenStruct).value
JSON.parse(response, object_class: OpenStruct)
JSON.parse(response, object_class: OpenStruct.new) #.value
JSON.parse(response, object_class: OpenStruct).value
JSON.parse(response, object_class: OpenStruct).joke
JSON.parse(response, object_class: OpenStruct)
response = Net::HTTP.get(uri)
uri = URI(url)
url << "#{id}" if id
url = "http://api.icndb.com/jokes/"
id
